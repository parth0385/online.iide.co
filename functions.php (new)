<?php
/**
 * Astra Child Theme functions and definitions
 *
 * @link https://developer.wordpress.org/themes/basics/theme-functions/
 *
 * @package Astra Child
 * @since 2.4.4
 */

/**
 * Define Constants
 */
define( 'CHILD_THEME_ASTRA_CHILD_VERSION', '2.4.4' );

/**
 * Enqueue styles
 */
function child_enqueue_styles() {

	wp_enqueue_style( 'astra-child-theme-css', get_stylesheet_directory_uri() . '/style.css', array('astra-theme-css'), CHILD_THEME_ASTRA_CHILD_VERSION, 'all' );

}
add_action( 'wp_enqueue_scripts', 'child_enqueue_styles', 15 );

add_filter( 'woocommerce_product_add_to_cart_text', function( $text ) {
    if ( 'Read more' == $text ) {
        $text = __( 'View Course', 'woocommerce' );
    }

    return $text;
} );

add_filter( 'woocommerce_product_single_add_to_cart_text', 'woocommerce_custom_single_add_to_cart_text' ); 
function woocommerce_custom_single_add_to_cart_text() {
    return __( 'Enroll Now', 'woocommerce' ); 
}

add_filter( 'woocommerce_product_add_to_cart_text', 'woocommerce_custom_product_add_to_cart_text' );  
function woocommerce_custom_product_add_to_cart_text() {
    return __( 'Enroll Now', 'woocommerce' );
}

add_filter( 'gettext', 'change_woocommerce_return_to_shop_text', 20, 3 );

function change_woocommerce_return_to_shop_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Return to shop' : $translated_text = __( 'Explore Courses', 'woocommerce' );
                break;}
    return $translated_text;
}
add_filter( 'gettext', 'change_woocommerce_continue_shopping_text', 20, 3 );

function change_woocommerce_continue_shopping_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Continue shopping' : $translated_text = __( 'Explore Courses', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_email_address_text', 20, 3 );

function change_woocommerce_email_address_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Username or email address' : $translated_text = __( 'Email Address', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_email_text', 20, 3 );

function change_woocommerce_email_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Username or email' : $translated_text = __( 'Email Address', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_returning_customer_text', 20, 3 );

function change_woocommerce_returning_customer_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Returning customer?' : $translated_text = __( 'Returning Student?', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_login_text', 20, 3 );

function change_woocommerce_login_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'If you have shopped with us before, please enter your details below. If you are a new customer, please proceed to the Billing section.' : $translated_text = __( 'Have a IIDE Online account? Login here. New student? Proceed to the Billing Details.', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_forgot_password_text', 20, 3 );

function change_woocommerce_forgot_password_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Lost your password? Please enter your username or email address. You will receive a link to create a new password via email.' : $translated_text = __( 'Lost your password? Please enter your email address to receive a link to create a new password', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_invalid_text', 20, 3 );

function change_woocommerce_invalid_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Invalid username or email.' : $translated_text = __( 'Incorrect email address', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_password_reset_text', 20, 3 );

function change_woocommerce_password_reset_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'A password reset email has been sent to the email address on file for your account, but may take several minutes to show up in your inbox. Please wait at least 10 minutes before attempting another reset.' : $translated_text = __( 'It may take a few minutes for the email to show up in your inbox. Please wait for at least 15 minutes before attempting another reset.', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_place_order_text', 20, 3 );

function change_woocommerce_place_order_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Place order' : $translated_text = __( 'Checkout', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_current_password_text', 20, 3 );

function change_woocommerce_current_password_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Current password (leave blank to leave unchanged)' : $translated_text = __( 'Current password', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_new_password_text', 20, 3 );

function change_woocommerce_new_password_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'New password (leave blank to leave unchanged)' : $translated_text = __( 'New password', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_apply_coupon_text', 20, 3 );

function change_woocommerce_apply_coupon_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'Apply coupon' : $translated_text = __( 'Apply Coupon', 'woocommerce' );
                break;}
    return $translated_text;
}

add_filter( 'gettext', 'change_woocommerce_none_text', 20, 3 );

function change_woocommerce_none_text( $translated_text, $text, $domain ) {
switch ( $translated_text ) {
	case 'This will be how your name will be displayed in the account section and in reviews' : $translated_text = __( '', 'woocommerce' );
                break;}
    return $translated_text;
}


/**
 * Automatically apply coupons for users that have referred friends
 */
add_action( 'woocommerce_before_calculate_totals', 'wpgens_auto_apply_coupons_checkout', 10, 1 );
function wpgens_auto_apply_coupons_checkout( $cart ) {
	if ( is_admin() && ! defined( 'DOING_AJAX' ) )
        return;
    if ( did_action( 'woocommerce_before_calculate_totals' ) >= 2 )
        return;
    if(!is_user_logged_in())
    	return;
    $user_info = get_userdata(get_current_user_id());
    $user_email = $user_info->user_email;
    $date_format = get_option( 'date_format' );
    $args = array(
        'posts_per_page'   => 10,
        'post_type'        => 'shop_coupon',
        'post_status'      => 'publish',
        'meta_query' => array (
        'relation' => 'AND',
            array (
              'key' => 'customer_email',
              'value' => $user_email,
              'compare' => 'LIKE'
            ),
            array (
              'key' => 'usage_count',
              'value' => '0',
              'compare' => '='
            )
        ),
    );
    $raf_coupons = array();
    $coupons = get_posts( $args );
    if($coupons) {
        $i = 0;
        foreach ( $coupons as $coupon ) {
			if(!$cart->has_discount( $coupon->post_title ) ){
	        	$cart->add_discount( $coupon->post_title );
	        }
        }
    }   
}


// Change Sender Email Address
function wpb_sender_email( $original_email_address ) {
return 'learnonline@iide.co';
}
// Change Sender Name
function wpb_sender_name( $original_email_from ) {
return 'IIDE Online';
}
// Add Filters
add_filter( 'wp_mail_from', 'wpb_sender_email' );
add_filter( 'wp_mail_from_name', 'wpb_sender_name' );

/**
 * Login Link in Menu
 */

add_filter( 'wp_nav_menu_items', 'wti_loginout_menu_link', 10, 2 );

function wti_loginout_menu_link( $items, $args ) {
   if ($args->theme_location == 'primary') {
      if (is_user_logged_in()) {
         $items .= '<li class="logout"><a href="'. wp_logout_url('index.php') .'">'. __("Logout") .'</a></li>';
      } else {
         $items .= '<li class="loginpopup">'. __("Login") .'</a></li>';
      }
   }
   return $items;
}

/*
 * Add My Courses Link to My Account Menu
 */
add_filter ( 'woocommerce_account_menu_items', 'my_courses_link', 40 );
function my_courses_link( $menu_links ){
	$menu_links = array_slice( $menu_links, 0, 5, true ) 
	+ array( 'my-courses' => 'My Courses' )
	+ array_slice( $menu_links, 5, NULL, true );
	return $menu_links;
}

add_action( 'init', 'add_endpoint' );
function add_endpoint() {
 	add_rewrite_endpoint( 'my-courses', EP_PAGES );
}

add_action( 'woocommerce_account_my-courses_endpoint', 'my_account_endpoint_content' );
function my_account_endpoint_content() {
 	echo do_shortcode ("[elementor-template id='30663']");
}
// Go to Settings > Permalinks and just push "Save Changes" button.


/*
 * Add Referral Program Link to My Account Menu
 */
add_filter ( 'woocommerce_account_menu_items', 'referral_program_link', 40 );
function referral_program_link( $menu_links ){
	$menu_links = array_slice( $menu_links, 0, 5, true ) 
	+ array( 'referral-program' => 'Referral Program' )
	+ array_slice( $menu_links, 5, NULL, true );
	return $menu_links;
}

add_action( 'init', 'add_referral_program_endpoint' );
function add_referral_program_endpoint() {
 	add_rewrite_endpoint( 'referral-program', EP_PAGES );
}

add_action( 'woocommerce_account_referral-program_endpoint', 'referral_program_endpoint_content' );
function referral_program_endpoint_content() {
 	echo do_shortcode ("[elementor-template id='30448']");
}
// Go to Settings > Permalinks and just push "Save Changes" button.


/* Hide Menu Bar for Subscribers
 */
add_action('after_setup_theme', 'remove_admin_bar');
 
function remove_admin_bar() {
if (!current_user_can('administrator') && !is_admin()) {
  show_admin_bar(false);
}
}

// Disable re-purchase of product
function sv_wc_customer_purchased_product_in_cat( $product ) {

    // enter the category for which a single purchase is allowed
    $non_repeatable = 'Uncategorized';
    
    // bail if this product is in not in our target category
    if ( ! has_term( $non_repeatable, 'product_cat', $product->get_id() ) ) {
        return false;
    }
    
    // the product has our target category, so return whether the customer purchased
    return wc_customer_bought_product( wp_get_current_user()->user_email, get_current_user_id(), $product->get_id() );
}

function sv_wc_disable_repeat_purchase( $purchasable, $product ) {

    if ( sv_wc_customer_purchased_product_in_cat( $product ) ) {
        $purchasable = false;
    }
    
    // double-check for variations: if parent is not purchasable, then variation is not
    if ( $purchasable && $product->is_type( 'variation' ) ) {
        $purchasable = $product->parent->is_purchasable();
    }
    
    return $purchasable;
}
add_filter( 'woocommerce_variation_is_purchasable', 'sv_wc_disable_repeat_purchase', 10, 2 );
add_filter( 'woocommerce_is_purchasable', 'sv_wc_disable_repeat_purchase', 10, 2 );

function sv_wc_purchase_disabled_message() {

    // get the current product to check if purchasing should be disabled
    global $product;
    
    // now we know we're in the category, check if we've purchased already
    if ( sv_wc_customer_purchased_product_in_cat( $product ) ) {
        // Create your message for the customer here
        echo '<div class="woocommerce"><div class="woocommerce-info wc-nonpurchasable-message">
        You\'ve already purchased this product! It can only be purchased once.
        </div></div>';
    }
}
add_action( 'woocommerce_single_product_summary', 'sv_wc_purchase_disabled_message', 31 );

/**
 * Replace 'customer' role (WooCommerce default) to subscriber
**/
add_filter('woocommerce_new_customer_data', 'wc_assign_custom_role', 10, 1);

function wc_assign_custom_role($args) {
  $args['role'] = 'subscriber';
  
  return $args;
}

//Add Product Author
add_action('init', 'function_to_add_author_woocommerce', 999 );

function function_to_add_author_woocommerce() {
  add_post_type_support( 'product', 'author' );
  }

//Checkout Redirect
	add_action( 'template_redirect', 'custom_redirect_after_purchase' ); 
function custom_redirect_after_purchase() {
	global $wp;
	
	if ( is_checkout() && ! empty( $wp->query_vars['order-received'] ) ) {
		wp_redirect( 'https://online.iide.co/thank-you/' );
		exit;
	}
}

// Limit Woocommerce phone field to 10 digits number
add_action('woocommerce_checkout_process', 'my_custom_checkout_field_process');
  
function my_custom_checkout_field_process() {
    global $woocommerce;
  
    // Check if set, if its not set add an error. This one is only requite for companies
    if ( ! (preg_match('/^[0-9]{10}$/D', $_POST['billing_phone'] ))){
        wc_add_notice( "Please enter a valid 10-digit phone number" ,'error' );
    }
}

/* WC: Avoid alert message for individual sold product already in cart. */
add_action( 'woocommerce_add_to_cart_validation', 'phlegx_woocommerce_add_to_cart_validation', 10, 2 ); 
function phlegx_woocommerce_add_to_cart_validation( $passed, $product_id ) {
	$product = wc_get_product( $product_id );
	if( $product->get_sold_individually()                                              // if individual product
	&& WC()->cart->find_product_in_cart( WC()->cart->generate_cart_id( $product_id ) ) // if in the cart
	&& $product->is_purchasable()                                                      // if conditions
	&& $product->is_in_stock() ) {
		wp_safe_redirect( wc_get_cart_url() );
		exit();
    }
    return $passed;
}
